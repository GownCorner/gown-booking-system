{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ecaranto\\\\Downloads\\\\gown-booking-system\\\\gown-booking-system\\\\client\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from '../services/api'; // Ensure you have this API service set up\nimport './Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Handle input change\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    setError(''); // Clear errors when user types\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      password,\n      confirmPassword\n    } = formData;\n\n    // Validate passwords match\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axios.post('/api/auth/register', {\n        name,\n        email,\n        password\n      });\n\n      // Store the token in localStorage\n      localStorage.setItem('token', response.data.token);\n\n      // Success message and redirection\n      setSuccessMessage('Registration successful! Redirecting...');\n      setTimeout(() => {\n        var _location$state;\n        const redirectPath = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) || '/order-form'; // Default to Order Form or previous page\n        navigate(redirectPath);\n      }, 2000); // Delay for user to see success message\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const serverError = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed. Please try again.';\n      setError(serverError);\n      console.error('Registration error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Full Name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        value: formData.confirmPassword,\n        onChange: handleChange,\n        required: true,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"register-button\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"/YwDlz6nTYnm2Yu8Rlam/MHrOH4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","axios","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","name","email","password","confirmPassword","error","setError","successMessage","setSuccessMessage","navigate","location","handleChange","e","value","target","handleSubmit","preventDefault","response","post","localStorage","setItem","data","token","setTimeout","_location$state","redirectPath","state","from","_error$response","_error$response$data","serverError","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/ecaranto/Downloads/gown-booking-system/gown-booking-system/client/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from '../services/api'; // Ensure you have this API service set up\r\nimport './Register.css';\r\n\r\nfunction Register() {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    });\r\n    const [error, setError] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    // Handle input change\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n        setError(''); // Clear errors when user types\r\n    };\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, password, confirmPassword } = formData;\r\n\r\n        // Validate passwords match\r\n        if (password !== confirmPassword) {\r\n            setError('Passwords do not match');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('/api/auth/register', { name, email, password });\r\n\r\n            // Store the token in localStorage\r\n            localStorage.setItem('token', response.data.token);\r\n\r\n            // Success message and redirection\r\n            setSuccessMessage('Registration successful! Redirecting...');\r\n            setTimeout(() => {\r\n                const redirectPath = location.state?.from || '/order-form'; // Default to Order Form or previous page\r\n                navigate(redirectPath);\r\n            }, 2000); // Delay for user to see success message\r\n        } catch (error) {\r\n            const serverError = error.response?.data?.message || 'Registration failed. Please try again.';\r\n            setError(serverError);\r\n            console.error('Registration error:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <h2>Sign Up</h2>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            {successMessage && <p className=\"success\">{successMessage}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Full Name\"\r\n                    value={formData.name}\r\n                    onChange={handleChange}\r\n                    required\r\n                    className=\"input-field\"\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    required\r\n                    className=\"input-field\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={formData.password}\r\n                    onChange={handleChange}\r\n                    required\r\n                    className=\"input-field\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    placeholder=\"Confirm Password\"\r\n                    value={formData.confirmPassword}\r\n                    onChange={handleChange}\r\n                    required\r\n                    className=\"input-field\"\r\n                />\r\n                <button type=\"submit\" className=\"register-button\">Register</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}