{"ast":null,"code":"import axios from \"axios\";\n\n// Create an Axios instance with a base URL\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api\",\n  // Adjust the base URL if necessary\n  headers: {\n    \"Content-Type\": \"application/json\" // Default content type\n  }\n});\n\n// Add a request interceptor to include the token automatically\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\"); // Retrieve token from localStorage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // Add Authorization header\n  }\n  return config;\n}, error => {\n  return Promise.reject(error); // Pass through request errors\n});\n\n// Add a response interceptor to handle errors globally\nAPI.interceptors.response.use(response => response,\n// Return successful responses\nerror => {\n  // Handle 401 Unauthorized errors\n  if (error.response && error.response.status === 401) {\n    console.error(\"Unauthorized - Redirecting to login...\");\n    localStorage.removeItem(\"token\"); // Remove invalid token\n    window.location.href = \"/login\"; // Redirect to login\n  }\n  return Promise.reject(error); // Pass through other errors\n});\n\n// Authentication APIs\nexport const registerUser = async userData => {\n  return await API.post(\"/auth/register\", userData);\n};\nexport const loginUser = async userData => {\n  return await API.post(\"/auth/login\", userData);\n};\n\n// Gown APIs\nexport const fetchGowns = async () => {\n  return await API.get(\"/gowns\");\n};\n\n// Order APIs\nexport const createOrder = async orderData => {\n  return await API.post(\"/orders\", orderData);\n};\n\n// Booking APIs\nexport const createBooking = async bookingData => {\n  return await API.post(\"/bookings\", bookingData);\n};\nexport const getUserBookings = async userId => {\n  return await API.get(`/bookings/${userId}`);\n};\n\n// Add more API calls as needed\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","console","removeItem","window","location","href","registerUser","userData","post","loginUser","fetchGowns","get","createOrder","orderData","createBooking","bookingData","getUserBookings","userId"],"sources":["C:/Users/ecaranto/Downloads/gown-booking-system/client/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Create an Axios instance with a base URL\r\nconst API = axios.create({\r\n  baseURL: \"http://localhost:5000/api\", // Adjust the base URL if necessary\r\n  headers: {\r\n    \"Content-Type\": \"application/json\", // Default content type\r\n  },\r\n});\r\n\r\n// Add a request interceptor to include the token automatically\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\"); // Retrieve token from localStorage\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`; // Add Authorization header\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error); // Pass through request errors\r\n  }\r\n);\r\n\r\n// Add a response interceptor to handle errors globally\r\nAPI.interceptors.response.use(\r\n  (response) => response, // Return successful responses\r\n  (error) => {\r\n    // Handle 401 Unauthorized errors\r\n    if (error.response && error.response.status === 401) {\r\n      console.error(\"Unauthorized - Redirecting to login...\");\r\n      localStorage.removeItem(\"token\"); // Remove invalid token\r\n      window.location.href = \"/login\"; // Redirect to login\r\n    }\r\n    return Promise.reject(error); // Pass through other errors\r\n  }\r\n);\r\n\r\n// Authentication APIs\r\nexport const registerUser = async (userData) => {\r\n  return await API.post(\"/auth/register\", userData);\r\n};\r\n\r\nexport const loginUser = async (userData) => {\r\n  return await API.post(\"/auth/login\", userData);\r\n};\r\n\r\n// Gown APIs\r\nexport const fetchGowns = async () => {\r\n  return await API.get(\"/gowns\");\r\n};\r\n\r\n// Order APIs\r\nexport const createOrder = async (orderData) => {\r\n  return await API.post(\"/orders\", orderData);\r\n};\r\n\r\n// Booking APIs\r\nexport const createBooking = async (bookingData) => {\r\n  return await API.post(\"/bookings\", bookingData);\r\n};\r\n\r\nexport const getUserBookings = async (userId) => {\r\n  return await API.get(`/bookings/${userId}`);\r\n};\r\n\r\n// Add more API calls as needed\r\nexport default API;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB,CAAE;EACtC;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE,CAAC,CAAC;EACpD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC;AAChC,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ;AAAE;AACvBH,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnDC,OAAO,CAACL,KAAK,CAAC,wCAAwC,CAAC;IACvDH,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;EACnC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC;AAChC,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,OAAO,MAAMvB,GAAG,CAACwB,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;AACnD,CAAC;AAED,OAAO,MAAME,SAAS,GAAG,MAAOF,QAAQ,IAAK;EAC3C,OAAO,MAAMvB,GAAG,CAACwB,IAAI,CAAC,aAAa,EAAED,QAAQ,CAAC;AAChD,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,OAAO,MAAM1B,GAAG,CAAC2B,GAAG,CAAC,QAAQ,CAAC;AAChC,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,SAAS,IAAK;EAC9C,OAAO,MAAM7B,GAAG,CAACwB,IAAI,CAAC,SAAS,EAAEK,SAAS,CAAC;AAC7C,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,WAAW,IAAK;EAClD,OAAO,MAAM/B,GAAG,CAACwB,IAAI,CAAC,WAAW,EAAEO,WAAW,CAAC;AACjD,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAOC,MAAM,IAAK;EAC/C,OAAO,MAAMjC,GAAG,CAAC2B,GAAG,CAAC,aAAaM,MAAM,EAAE,CAAC;AAC7C,CAAC;;AAED;AACA,eAAejC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}