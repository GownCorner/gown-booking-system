{"ast":null,"code":"const handleLogin = async e => {\n  e.preventDefault();\n  try {\n    const response = await axios.post('/api/auth/login', {\n      email,\n      password\n    });\n    if (response.data.token) {\n      var _location$state, _location$state2;\n      localStorage.setItem('token', response.data.token);\n      const pickupDate = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.pickupDate) || new Date().toISOString();\n      const returnDate = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.returnDate) || new Date().toISOString();\n      navigate('/order-form', {\n        state: {\n          pickupDate,\n          returnDate\n        }\n      });\n    }\n  } catch (error) {\n    var _error$response;\n    console.error('Login Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    setErrorMessage('Invalid login credentials.');\n  }\n};","map":{"version":3,"names":["handleLogin","e","preventDefault","response","axios","post","email","password","data","token","_location$state","_location$state2","localStorage","setItem","pickupDate","location","state","Date","toISOString","returnDate","navigate","error","_error$response","console","message","setErrorMessage"],"sources":["C:/Users/ecaranto/Downloads/gown-booking-system/gown-booking-system/client/src/pages/Login.js"],"sourcesContent":["const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n        const response = await axios.post('/api/auth/login', { email, password });\r\n        if (response.data.token) {\r\n            localStorage.setItem('token', response.data.token);\r\n\r\n            const pickupDate = location.state?.pickupDate || new Date().toISOString();\r\n            const returnDate = location.state?.returnDate || new Date().toISOString();\r\n\r\n            navigate('/order-form', { state: { pickupDate, returnDate } });\r\n        }\r\n    } catch (error) {\r\n        console.error('Login Error:', error.response?.data || error.message);\r\n        setErrorMessage('Invalid login credentials.');\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAOC,CAAC,IAAK;EAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,iBAAiB,EAAE;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;IACzE,IAAIJ,QAAQ,CAACK,IAAI,CAACC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,gBAAA;MACrBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEV,QAAQ,CAACK,IAAI,CAACC,KAAK,CAAC;MAElD,MAAMK,UAAU,GAAG,EAAAJ,eAAA,GAAAK,QAAQ,CAACC,KAAK,cAAAN,eAAA,uBAAdA,eAAA,CAAgBI,UAAU,KAAI,IAAIG,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACzE,MAAMC,UAAU,GAAG,EAAAR,gBAAA,GAAAI,QAAQ,CAACC,KAAK,cAAAL,gBAAA,uBAAdA,gBAAA,CAAgBQ,UAAU,KAAI,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAEzEE,QAAQ,CAAC,aAAa,EAAE;QAAEJ,KAAK,EAAE;UAAEF,UAAU;UAAEK;QAAW;MAAE,CAAC,CAAC;IAClE;EACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZC,OAAO,CAACF,KAAK,CAAC,cAAc,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAAClB,QAAQ,cAAAmB,eAAA,uBAAdA,eAAA,CAAgBd,IAAI,KAAIa,KAAK,CAACG,OAAO,CAAC;IACpEC,eAAe,CAAC,4BAA4B,CAAC;EACjD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}