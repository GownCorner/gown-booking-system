{"ast":null,"code":"import axios from\"axios\";// Create an Axios instance with a base URL\nconst api=axios.create({baseURL:\"http://localhost:5000/api\",// Backend base URL\nheaders:{\"Content-Type\":\"application/json\"// Default content type\n}});// Add an interceptor to include the authorization token in every request\napi.interceptors.request.use(config=>{const token=localStorage.getItem(\"token\");// Retrieve token from localStorage\nif(token){config.headers.Authorization=`Bearer ${token}`;// Add Authorization header\n}return config;},error=>{return Promise.reject(error);// Handle request errors\n});// Add an interceptor to handle responses globally\napi.interceptors.response.use(response=>{return response;// Pass through successful responses\n},error=>{// Handle response errors globally (e.g., 401 Unauthorized)\nif(error.response&&error.response.status===401){console.error(\"Unauthorized access - logging out...\");localStorage.removeItem(\"token\");// Clear token\nwindow.location.href=\"/login\";// Redirect to login\n}return Promise.reject(error);// Pass through other errors\n});export default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","console","removeItem","window","location","href"],"sources":["C:/Users/ecaranto/Downloads/gown-booking-system with admin/client/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Create an Axios instance with a base URL\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:5000/api\", // Backend base URL\r\n  headers: {\r\n    \"Content-Type\": \"application/json\", // Default content type\r\n  },\r\n});\r\n\r\n// Add an interceptor to include the authorization token in every request\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\"); // Retrieve token from localStorage\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`; // Add Authorization header\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error); // Handle request errors\r\n  }\r\n);\r\n\r\n// Add an interceptor to handle responses globally\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response; // Pass through successful responses\r\n  },\r\n  (error) => {\r\n    // Handle response errors globally (e.g., 401 Unauthorized)\r\n    if (error.response && error.response.status === 401) {\r\n      console.error(\"Unauthorized access - logging out...\");\r\n      localStorage.removeItem(\"token\"); // Clear token\r\n      window.location.href = \"/login\"; // Redirect to login\r\n    }\r\n    return Promise.reject(error); // Pass through other errors\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACvBC,OAAO,CAAE,2BAA2B,CAAE;AACtCC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAoB;AACtC,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE;AAC7C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,CAAG,UAAUH,KAAK,EAAE,CAAE;AACpD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAK,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAAE;AAChC,CACF,CAAC,CAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,EAAK,CACZ,MAAO,CAAAA,QAAQ,CAAE;AACnB,CAAC,CACAH,KAAK,EAAK,CACT;AACA,GAAIA,KAAK,CAACG,QAAQ,EAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAE,CACnDC,OAAO,CAACL,KAAK,CAAC,sCAAsC,CAAC,CACrDH,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC,CAAE;AAClCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CAAE;AACnC,CACA,MAAO,CAAAR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAAE;AAChC,CACF,CAAC,CAED,cAAe,CAAAZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}