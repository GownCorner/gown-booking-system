{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ecaranto\\\\Documents\\\\gown-booking-system\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      if (response.data.token) {\n        var _location$state, _location$state2;\n        localStorage.setItem('token', response.data.token);\n\n        // Retrieve dates from location.state if available\n        const pickupDate = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.pickupDate) || null;\n        const returnDate = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.returnDate) || null;\n\n        // Redirect to the Order Form and pass the dates if they exist\n        navigate('/order-form', {\n          state: {\n            pickupDate,\n            returnDate\n          }\n        });\n      }\n    } catch (error) {\n      setErrorMessage('Invalid login credentials. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign-in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        var _location$state3;\n        return navigate('/register', {\n          state: {\n            from: (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.from\n          }\n        });\n      },\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/reset-password\",\n      children: \"Forgot your password?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"IGgmqKSlxsjjiXGWnoUT8jYM+MU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","axios","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","navigate","location","handleLogin","e","preventDefault","response","post","data","token","_location$state","_location$state2","localStorage","setItem","pickupDate","state","returnDate","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","_location$state3","from","href","_c","$RefreshReg$"],"sources":["C:/Users/ecaranto/Documents/gown-booking-system/client/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('/api/auth/login', { email, password });\r\n            if (response.data.token) {\r\n                localStorage.setItem('token', response.data.token);\r\n\r\n                // Retrieve dates from location.state if available\r\n                const pickupDate = location.state?.pickupDate || null;\r\n                const returnDate = location.state?.returnDate || null;\r\n\r\n                // Redirect to the Order Form and pass the dates if they exist\r\n                navigate('/order-form', { state: { pickupDate, returnDate } });\r\n            }\r\n        } catch (error) {\r\n            setErrorMessage('Invalid login credentials. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h2>Sign-in</h2>\r\n            <form onSubmit={handleLogin}>\r\n                {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n                <label>Email</label>\r\n                <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                <label>Password</label>\r\n                <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n                <button type=\"submit\">Log in</button>\r\n            </form>\r\n            <button onClick={() => navigate('/register', { state: { from: location.state?.from } })}>Sign up</button>\r\n            <a href=\"/reset-password\">Forgot your password?</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}