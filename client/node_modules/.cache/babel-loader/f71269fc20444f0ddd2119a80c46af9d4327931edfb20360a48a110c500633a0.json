{"ast":null,"code":"const handleLogin = async e => {\n  e.preventDefault();\n  try {\n    const response = await fetch(\"http://localhost:5000/api/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || \"Login failed\");\n    }\n    const data = await response.json();\n    console.log(\"Login response user role:\", data.user.role); // Debug role\n\n    // Save token and redirect\n    localStorage.setItem(\"token\", data.token);\n    window.location.reload(); // Reload to ensure AuthContext updates\n  } catch (error) {\n    console.error(\"Login error:\", error.message);\n    alert(error.message);\n  }\n};","map":{"version":3,"names":["handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","email","password","ok","errorData","json","Error","message","data","console","log","user","role","localStorage","setItem","token","window","location","reload","error","alert"],"sources":["C:/Users/ecaranto/Downloads/gown-booking-system/client/src/pages/Login.js"],"sourcesContent":["const handleLogin = async (e) => {\r\n  e.preventDefault();\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || \"Login failed\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(\"Login response user role:\", data.user.role); // Debug role\r\n\r\n    // Save token and redirect\r\n    localStorage.setItem(\"token\", data.token);\r\n    window.location.reload(); // Reload to ensure AuthContext updates\r\n  } catch (error) {\r\n    console.error(\"Login error:\", error.message);\r\n    alert(error.message);\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAOC,CAAC,IAAK;EAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACnEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,cAAc,CAAC;IACtD;IAEA,MAAMC,IAAI,GAAG,MAAMd,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClCI,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,IAAI,CAACG,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;;IAE1D;IACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,KAAK,CAAC;IACzCC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdV,OAAO,CAACU,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACZ,OAAO,CAAC;IAC5Ca,KAAK,CAACD,KAAK,CAACZ,OAAO,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}