{"ast":null,"code":"import isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar weekdays = ['недела', 'понеделник', 'вторник', 'среда', 'четврток', 'петок', 'сабота'];\nfunction lastWeek(day) {\n  var weekday = weekdays[day];\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'минатата \" + weekday + \" во' p\";\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'минатиот \" + weekday + \" во' p\";\n  }\n}\nfunction thisWeek(day) {\n  var weekday = weekdays[day];\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'ова \" + weekday + \" вo' p\";\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'овој \" + weekday + \" вo' p\";\n  }\n}\nfunction nextWeek(day) {\n  var weekday = weekdays[day];\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'следната \" + weekday + \" вo' p\";\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'следниот \" + weekday + \" вo' p\";\n  }\n}\nvar formatRelativeLocale = {\n  lastWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'вчера во' p\",\n  today: \"'денес во' p\",\n  tomorrow: \"'утре во' p\",\n  nextWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: 'P'\n};\nvar formatRelative = function (token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n  return format;\n};\nexport default formatRelative;","map":{"version":3,"names":["isSameUTCWeek","weekdays","lastWeek","day","weekday","thisWeek","nextWeek","formatRelativeLocale","date","baseDate","options","getUTCDay","yesterday","today","tomorrow","other","formatRelative","token","format"],"sources":["C:/Users/ecaranto/Documents/gown-booking-system/client/node_modules/date-fns/esm/locale/mk/_lib/formatRelative/index.js"],"sourcesContent":["import isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar weekdays = ['недела', 'понеделник', 'вторник', 'среда', 'четврток', 'петок', 'сабота'];\n\nfunction lastWeek(day) {\n  var weekday = weekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'минатата \" + weekday + \" во' p\";\n\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'минатиот \" + weekday + \" во' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  var weekday = weekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'ова \" + weekday + \" вo' p\";\n\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'овој \" + weekday + \" вo' p\";\n  }\n}\n\nfunction nextWeek(day) {\n  var weekday = weekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'следната \" + weekday + \" вo' p\";\n\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'следниот \" + weekday + \" вo' p\";\n  }\n}\n\nvar formatRelativeLocale = {\n  lastWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'вчера во' p\",\n  today: \"'денес во' p\",\n  tomorrow: \"'утре во' p\",\n  nextWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: 'P'\n};\n\nvar formatRelative = function (token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n\nexport default formatRelative;"],"mappings":"AAAA,OAAOA,aAAa,MAAM,yCAAyC;AACnE,IAAIC,QAAQ,GAAG,CAAC,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC;AAE1F,SAASC,QAAQA,CAACC,GAAG,EAAE;EACrB,IAAIC,OAAO,GAAGH,QAAQ,CAACE,GAAG,CAAC;EAE3B,QAAQA,GAAG;IACT,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,YAAY,GAAGC,OAAO,GAAG,QAAQ;IAE1C,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,YAAY,GAAGA,OAAO,GAAG,QAAQ;EAC5C;AACF;AAEA,SAASC,QAAQA,CAACF,GAAG,EAAE;EACrB,IAAIC,OAAO,GAAGH,QAAQ,CAACE,GAAG,CAAC;EAE3B,QAAQA,GAAG;IACT,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,OAAO,GAAGC,OAAO,GAAG,QAAQ;IAErC,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,QAAQ,GAAGA,OAAO,GAAG,QAAQ;EACxC;AACF;AAEA,SAASE,QAAQA,CAACH,GAAG,EAAE;EACrB,IAAIC,OAAO,GAAGH,QAAQ,CAACE,GAAG,CAAC;EAE3B,QAAQA,GAAG;IACT,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,YAAY,GAAGC,OAAO,GAAG,QAAQ;IAE1C,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,YAAY,GAAGA,OAAO,GAAG,QAAQ;EAC5C;AACF;AAEA,IAAIG,oBAAoB,GAAG;EACzBL,QAAQ,EAAE,SAAAA,CAAUM,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAE;IAC3C,IAAIP,GAAG,GAAGK,IAAI,CAACG,SAAS,CAAC,CAAC;IAE1B,IAAIX,aAAa,CAACQ,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC,EAAE;MAC1C,OAAOL,QAAQ,CAACF,GAAG,CAAC;IACtB,CAAC,MAAM;MACL,OAAOD,QAAQ,CAACC,GAAG,CAAC;IACtB;EACF,CAAC;EACDS,SAAS,EAAE,cAAc;EACzBC,KAAK,EAAE,cAAc;EACrBC,QAAQ,EAAE,aAAa;EACvBR,QAAQ,EAAE,SAAAA,CAAUE,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAE;IAC3C,IAAIP,GAAG,GAAGK,IAAI,CAACG,SAAS,CAAC,CAAC;IAE1B,IAAIX,aAAa,CAACQ,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC,EAAE;MAC1C,OAAOL,QAAQ,CAACF,GAAG,CAAC;IACtB,CAAC,MAAM;MACL,OAAOG,QAAQ,CAACH,GAAG,CAAC;IACtB;EACF,CAAC;EACDY,KAAK,EAAE;AACT,CAAC;AAED,IAAIC,cAAc,GAAG,SAAAA,CAAUC,KAAK,EAAET,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EAC7D,IAAIQ,MAAM,GAAGX,oBAAoB,CAACU,KAAK,CAAC;EAExC,IAAI,OAAOC,MAAM,KAAK,UAAU,EAAE;IAChC,OAAOA,MAAM,CAACV,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC;EACxC;EAEA,OAAOQ,MAAM;AACf,CAAC;AAED,eAAeF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}